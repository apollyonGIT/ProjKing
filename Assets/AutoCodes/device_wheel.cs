//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoCodes
{
    
    
    public class device_wheel
    {
        
        public uint id;
        
        public uint sub_id;
        
        public string SE_stuck = "";
        
        public System.Nullable<float> wheel_height;
        
        public float wheel_radius_visual;
        
        public int tractive_force_max;
        
        public float feedback_0;
        
        public float feedback_1;
        
        public float sprint_charge_speed;
        
        public float sprint_charge_speed_bonus;
        
        public int sprint_charge_cd;
        
        public int sprint_charge_point;
        
        public float sprint_max_speed;
        
        public float ejection_charge;
        
        public int ejection_count_init;
        
        public int ejection_count_max;
        
        public System.ValueTuple<float, float> ejection_speed_x;
        
        public System.ValueTuple<float, float> ejection_speed_y;
        
        public float sprint_lever_loss;
        
        public object diy_obj;
    }
    
    public class device_wheels
    {
        
        private static System.Collections.Generic.Dictionary<string, device_wheel> m_records;
        
        public static System.Collections.Generic.Dictionary<string, device_wheel> records
        {
            get
            {
                return (System.Collections.Generic.Dictionary<string, device_wheel>)Foundations.Excels.ExcelAnalyzer.init("device_wheel");
            }
        }
        
        public static bool TryGetValue(string key, out device_wheel record)
        {
            return Foundations.Excels.ExcelAnalyzer.try_get_value("device_wheel", key, out record);
        }
    }
}
